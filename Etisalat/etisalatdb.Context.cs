//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Etisalat
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EtisalatEntities : DbContext
    {
        public EtisalatEntities()
            : base("name=EtisalatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Department> Departments { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Postion> Postions { get; set; }
    
        public virtual int add_department(string department_name)
        {
            var department_nameParameter = department_name != null ?
                new ObjectParameter("department_name", department_name) :
                new ObjectParameter("department_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_department", department_nameParameter);
        }
    
        public virtual int add_employee(string name, string address, Nullable<int> phone, string position_name, string depart_name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone.HasValue ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(int));
    
            var position_nameParameter = position_name != null ?
                new ObjectParameter("position_name", position_name) :
                new ObjectParameter("position_name", typeof(string));
    
            var depart_nameParameter = depart_name != null ?
                new ObjectParameter("depart_name", depart_name) :
                new ObjectParameter("depart_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_employee", nameParameter, addressParameter, phoneParameter, position_nameParameter, depart_nameParameter);
        }
    
        public virtual int add_position(string position_name, string department_name, Nullable<int> salary)
        {
            var position_nameParameter = position_name != null ?
                new ObjectParameter("position_name", position_name) :
                new ObjectParameter("position_name", typeof(string));
    
            var department_nameParameter = department_name != null ?
                new ObjectParameter("department_name", department_name) :
                new ObjectParameter("department_name", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_position", position_nameParameter, department_nameParameter, salaryParameter);
        }
    
        public virtual ObjectResult<find_employee_Result> find_employee(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("employeeID", employeeID) :
                new ObjectParameter("employeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<find_employee_Result>("find_employee", employeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> select_department(string depart_name)
        {
            var depart_nameParameter = depart_name != null ?
                new ObjectParameter("depart_name", depart_name) :
                new ObjectParameter("depart_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("select_department", depart_nameParameter);
        }
    
        public virtual int updateEmployee(string empName, string empAddress, Nullable<int> empPhone, string depName, string posName)
        {
            var empNameParameter = empName != null ?
                new ObjectParameter("empName", empName) :
                new ObjectParameter("empName", typeof(string));
    
            var empAddressParameter = empAddress != null ?
                new ObjectParameter("empAddress", empAddress) :
                new ObjectParameter("empAddress", typeof(string));
    
            var empPhoneParameter = empPhone.HasValue ?
                new ObjectParameter("empPhone", empPhone) :
                new ObjectParameter("empPhone", typeof(int));
    
            var depNameParameter = depName != null ?
                new ObjectParameter("depName", depName) :
                new ObjectParameter("depName", typeof(string));
    
            var posNameParameter = posName != null ?
                new ObjectParameter("posName", posName) :
                new ObjectParameter("posName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateEmployee", empNameParameter, empAddressParameter, empPhoneParameter, depNameParameter, posNameParameter);
        }
    }
}
